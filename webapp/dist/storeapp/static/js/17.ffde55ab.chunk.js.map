{"version":3,"sources":["../node_modules/semantic-ui-react/dist/es/elements/Divider/Divider.js","views/app/home/index.js"],"names":["Divider","props","children","className","clearing","content","fitted","hidden","horizontal","inverted","section","vertical","classes","cx","useKeyOnly","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","Home","style","marginTop"],"mappings":"mGAAA,oGASA,SAASA,EAAQC,GACf,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBC,EAAWH,EAAMG,SACjBC,EAAUJ,EAAMI,QAChBC,EAASL,EAAMK,OACfC,EAASN,EAAMM,OACfC,EAAaP,EAAMO,WACnBC,EAAWR,EAAMQ,SACjBC,EAAUT,EAAMS,QAChBC,EAAWV,EAAMU,SACjBC,EAAUC,IAAG,KAAMC,YAAWV,EAAU,YAAaU,YAAWR,EAAQ,UAAWQ,YAAWP,EAAQ,UAAWO,YAAWN,EAAY,cAAeM,YAAWL,EAAU,YAAaK,YAAWJ,EAAS,WAAYI,YAAWH,EAAU,YAAa,UAAWR,GACtQY,EAAOC,YAAkBhB,EAASC,GAClCgB,EAAcC,YAAelB,EAASC,GAC1C,OAAOkB,IAAMC,cAAcH,EAAaI,IAAS,GAAIN,EAAM,CACzDZ,UAAWS,IACTU,IAAcC,MAAMrB,GAAYG,EAAUH,GAGhDF,EAAQwB,aAAe,CAAC,KAAM,WAAY,YAAa,WAAY,UAAW,SAAU,SAAU,aAAc,WAAY,UAAW,YACvIxB,EAAQyB,UAiCJ,GACWzB,O,iCC/Df,oCAmFe0B,UA9EF,WACX,OACE,yBAAKC,MAAO,CAAEC,UAAW,SACvB,wCACA,kBAAC,IAAD,MACA,+EACA,4BACE,qCACA,sCAEF,2CACA,kBAAC,IAAD,MACA,iFAEA,2BACE,wCAEF,4BACE,sCAEE,4BACE,qCACA,+CACA,gDACA,gDACA,2CACA,4CACA,0CACA,8CACA,sCACA,yCAGJ,2CACA,kDAEF,2BACE,wCAEF,4BACE,2CAEE,4BACE,0CACA,2CACA,0CACA,0CACA,kDACA,6CACA,6CACA,wCACA,2CACA,iDACA,4CACA,gDACA,sCACA,uCACA,gDAIN,2BACE,yCAEF,4BACE,2CAEF,2BACE,sCAEF,4BACE,mDACA","file":"static/js/17.ffde55ab.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A divider visually segments content into groups.\n */\n\nfunction Divider(props) {\n  var children = props.children,\n      className = props.className,\n      clearing = props.clearing,\n      content = props.content,\n      fitted = props.fitted,\n      hidden = props.hidden,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      section = props.section,\n      vertical = props.vertical;\n  var classes = cx('ui', useKeyOnly(clearing, 'clearing'), useKeyOnly(fitted, 'fitted'), useKeyOnly(hidden, 'hidden'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(section, 'section'), useKeyOnly(vertical, 'vertical'), 'divider', className);\n  var rest = getUnhandledProps(Divider, props);\n  var ElementType = getElementType(Divider, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nDivider.handledProps = [\"as\", \"children\", \"className\", \"clearing\", \"content\", \"fitted\", \"hidden\", \"horizontal\", \"inverted\", \"section\", \"vertical\"];\nDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Divider can clear the content above it. */\n  clearing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Divider can be fitted without any space above or below it. */\n  fitted: PropTypes.bool,\n\n  /** Divider can divide content without creating a dividing line. */\n  hidden: PropTypes.bool,\n\n  /** Divider can segment content horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Divider can have its colours inverted. */\n  inverted: PropTypes.bool,\n\n  /** Divider can provide greater margins to divide sections of content. */\n  section: PropTypes.bool,\n\n  /** Divider can segment content vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Divider;","import React from \"react\";\n\n// semantic ui\nimport { Divider } from \"semantic-ui-react\";\n\nconst Home = () => {\n  return (\n    <div style={{ marginTop: \"40px\" }}>\n      <h1>StoreApp</h1>\n      <Divider />\n      <p>Basic App in charge of the CRUD of two entities.</p>\n      <ul>\n        <li>Store</li>\n        <li>Items</li>\n      </ul>\n      <h3>Tecnologies</h3>\n      <Divider />\n      <p>This app is served with Nginx in a ubuntu machine.</p>\n\n      <p>\n        <b>Fontend:</b>\n      </p>\n      <ul>\n        <li>\n          ReactJs\n          <ul>\n            <li>axios</li>\n            <li>react-hook-form</li>\n            <li>react-image-crop</li>\n            <li>react-router-dom</li>\n            <li>sweetalert2</li>\n            <li>React redux </li>\n            <li>redux-saga</li>\n            <li>react-dropzone</li>\n            <li>moment</li>\n            <li>i18next</li>\n          </ul>\n        </li>\n        <li>Semantic UI</li>\n        <li>Semantic UI React</li>\n      </ul>\n      <p>\n        <b>BackEnd:</b>\n      </p>\n      <ul>\n        <li>\n          Flask Python\n          <ul>\n            <li>SqlAlchemy</li>\n            <li>Marshmallow</li>\n            <li>cloudinary</li>\n            <li>Flask-Cors</li>\n            <li>Flask-JWT-Extended</li>\n            <li>Flask-RESTful</li>\n            <li>Flask-Migrate</li>\n            <li>requests</li>\n            <li>Flask-Babel</li>\n            <li>Flask-marshmallow</li>\n            <li>Flask-Script</li>\n            <li>Flask-SQLAlchemy</li>\n            <li>Jinja2</li>\n            <li>passlib</li>\n            <li>python-dotenv</li>\n          </ul>\n        </li>\n      </ul>\n      <p>\n        <b>Database:</b>\n      </p>\n      <ul>\n        <li>Postgresql</li>\n      </ul>\n      <p>\n        <b>Cloud:</b>\n      </p>\n      <ul>\n        <li>Cloudinary (Images)</li>\n        <li>Mailgun (Email)</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}