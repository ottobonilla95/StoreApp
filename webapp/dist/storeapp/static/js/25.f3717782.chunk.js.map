{"version":3,"sources":["views/user/ResendConfirmationEmail/index.js"],"names":["connect","state","user","dispatch","sendConfirmationEmail","userData","props","t","useTranslation","useForm","handleSubmit","errors","control","className","onSubmit","data","as","Field","Input","label","placeholder","disabled","loading","error","email","content","message","pointing","name","rules","required","defaultValue","type","password","minLength","value","style","textAlign","marginTop","onClick","history","push"],"mappings":"mGAAA,sFAoIeA,uBAbS,SAACC,GACvB,MAAO,CACLC,KAAMD,EAAMC,SAIW,SAACC,GAC1B,MAAO,CACLC,sBAAuB,SAACC,GAAD,OACrBF,EAASC,YAAsBC,QAItBL,EAhHiB,SAACM,GAAU,IAEjCC,EAAMC,cAAND,EAFiC,EAKCE,cAAlCC,EALiC,EAKjCA,aAAcC,EALmB,EAKnBA,OAAQC,EALW,EAKXA,QAM9B,OACE,yBAAKC,UAAU,kBACb,4BAAKN,EAAE,6BAA8B,6BACrC,yBAAKM,UAAU,eAEf,kBAAC,IAAD,CAAMC,SAAUJ,GATH,SAACK,GAChBT,EAAMF,sBAAsB,CAAEC,SAAUU,QASpC,kBAAC,IAAD,CACEC,GACE,kBAAC,IAAKC,MAAN,CACEL,QAASM,IACTC,MAAOZ,EAAE,uCAAwC,SACjDa,YAAab,EAAE,uCAAwC,SACvDc,SAAUf,EAAMJ,KAAKoB,QACrBC,MACEZ,EAAOa,OAAS,CACdC,QAASd,EAAOa,MAAME,QACtBC,SAAU,WAKlBC,KAAK,QACLhB,QAASA,EACTiB,MAAO,CACLC,SAAUvB,EACR,wCACA,2BAGJwB,aAAa,KAEf,kBAAC,IAAD,CACEf,GACE,kBAAC,IAAKC,MAAN,CACEL,QAASM,IACTC,MAAOZ,EAAE,0CAA2C,YACpDa,YAAab,EACX,0CACA,YAEFc,SAAUf,EAAMJ,KAAKoB,QACrBU,KAAK,WACLT,MACEZ,EAAOsB,UAAY,CACjBR,QAASd,EAAOsB,SAASP,QACzBC,SAAU,WAKlBC,KAAK,WACLhB,QAASA,EACTiB,MAAO,CACLC,SAAUvB,EACR,wCACA,0BAEF2B,UAAW,CAAEC,MAAO,EAAGT,QAAS,mBAElCK,aAAa,KAEf,yBAAKK,MAAO,CAAEC,UAAW,WACvB,4BACExB,UAAS,6BACPP,EAAMJ,KAAKoB,QAAU,UAAY,IAEnCc,MAAO,CAAEE,UAAW,OACpBN,KAAK,SACLX,SAAUf,EAAMJ,KAAKoB,SAEpBf,EAAE,6CAA8C,eAEnD,4BACEyB,KAAK,SACLnB,UAAU,YACV0B,QAAS,WACPC,IAAQC,KAAK,2BAEfpB,SAAUf,EAAMJ,KAAKoB,SAEpBf,EAAE,oBAAqB","file":"static/js/25.f3717782.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\n\n// react-hook-form\nimport { useForm, Controller } from \"react-hook-form\";\n\n// semantic ui\nimport { Form, Input } from \"semantic-ui-react\";\n\n// redux\nimport { connect } from \"react-redux\";\n\n// actions\nimport { sendConfirmationEmail } from \"../../../redux/auth/actions\";\n\n// react-i18next\nimport { useTranslation } from \"react-i18next\";\n\n// history\nimport history from \"../../../utils/history\";\n\nconst ResendConfirmationEmail = (props) => {\n  // react-i18next\n  const { t } = useTranslation();\n\n  // form\n  const { handleSubmit, errors, control } = useForm();\n\n  const onSubmit = (data) => {\n    props.sendConfirmationEmail({ userData: data });\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h2>{t(\"modules.resendemail.tittle\", \"Resend confirmaion email\")}</h2>\n      <div className=\"ui divider\"></div>\n\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Controller\n          as={\n            <Form.Field\n              control={Input}\n              label={t(\"modules.resendemail.form.label.email\", \"Email\")}\n              placeholder={t(\"modules.resendemail.form.label.email\", \"Email\")}\n              disabled={props.user.loading}\n              error={\n                errors.email && {\n                  content: errors.email.message,\n                  pointing: \"below\",\n                }\n              }\n            />\n          }\n          name=\"email\"\n          control={control}\n          rules={{\n            required: t(\n              \"form.validationmessages.requiredfield\",\n              \"This field is required\"\n            ),\n          }}\n          defaultValue=\"\"\n        />\n        <Controller\n          as={\n            <Form.Field\n              control={Input}\n              label={t(\"modules.resendemail.form.label.password\", \"Password\")}\n              placeholder={t(\n                \"modules.resendemail.form.label.password\",\n                \"Password\"\n              )}\n              disabled={props.user.loading}\n              type=\"password\"\n              error={\n                errors.password && {\n                  content: errors.password.message,\n                  pointing: \"below\",\n                }\n              }\n            />\n          }\n          name=\"password\"\n          control={control}\n          rules={{\n            required: t(\n              \"form.validationmessages.requiredfield\",\n              \"This field is required\"\n            ),\n            minLength: { value: 8, message: \"Minlength is 8\" },\n          }}\n          defaultValue=\"\"\n        />\n        <div style={{ textAlign: \"center\" }}>\n          <button\n            className={`ui button positive ${\n              props.user.loading ? \"loading\" : \"\"\n            }`}\n            style={{ marginTop: \"6px\" }}\n            type=\"submit\"\n            disabled={props.user.loading}\n          >\n            {t(\"modules.resendemail.form.buttons.sendemail\", \"Send Email\")}\n          </button>\n          <button\n            type=\"button\"\n            className=\"ui button\"\n            onClick={() => {\n              history.push(\"/dashboard/user/signin\");\n            }}\n            disabled={props.user.loading}\n          >\n            {t(\"form.buttons.back\", \"Back\")}\n          </button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendConfirmationEmail: (userData) =>\n      dispatch(sendConfirmationEmail(userData)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResendConfirmationEmail);\n"],"sourceRoot":""}