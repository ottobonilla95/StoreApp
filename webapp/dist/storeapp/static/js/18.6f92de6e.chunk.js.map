{"version":3,"sources":["assets/images/defaultImage.png","views/app/store/StoreItem.js","components/message/index.js","components/placeholder/CardPlaceHolder.js","views/app/store/StoreList.js","views/app/store/StoreHome.js"],"names":["module","exports","connect","state","user","setCurrentStore","props","className","onClick","history","push","store","id","image","src","alt","defaultImage","user_id","renderEditButton","name","description","moment","creation_date","year","items","length","Message","tittle","message","CardPlaceHolder","Card","Placeholder","Image","Content","Header","Line","Description","Paragraph","extra","StoreList","stores","loading","Group","map","key","renderStores","dispatch","fetchStores","pagination","fetchOwnStores","tabs","options","t","useTranslation","useState","option","setOption","filter","setFilter","useEffect","handleTabClick","e","isLoggedIn","Menu","Item","active","Button","match","path","attached","tabular","position","Input","type","transparent","icon","link","placeholder","onChange","target","value","Segment","_","list","o","pos","toLowerCase","search","posDes","style","textAlign","Pagination","boundaryRange","ellipsisItem","firstItem","lastItem","siblingRange","activePage","page","onPageChange","totalPages","pages"],"mappings":"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","file":"static/js/18.6f92de6e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultImage.4e62dd19.png\";","import React from \"react\";\n\n// history\nimport history from \"../../../utils/history\";\n\n// redux\nimport { connect } from \"react-redux\";\n\n// actions\nimport { setCurrentStore } from \"../../../redux/store/actions\";\n\n// moment\nimport moment from \"moment\";\n\n// image\nimport defaultImage from \"../../../assets/images/defaultImage.png\";\n\nconst StoreItem = (props) => {\n  const renderEditButton = () => {\n    if (props.user.user_id === props.store.user_id) {\n      return <i className=\"right floated user icon\"></i>;\n    }\n  };\n  return (\n    <div\n      className=\"ui card\"\n      onClick={() => {\n        history.push(`store/detail/${props.store.id}`);\n        props.setCurrentStore(props.store);\n      }}\n    >\n      <div className=\"image\">\n        {props.store.image && <img src={props.store.image} alt=\"\" />}\n        {!props.store.image && <img src={defaultImage} alt=\"\" />}\n      </div>\n      <div className=\"content\">\n        {renderEditButton()}\n\n        <div className=\"header\">{props.store.name}</div>\n        <div className=\"description\">{props.store.description}</div>\n      </div>\n      <div className=\"extra content\">\n        <span className=\"right floated\">\n          Created in {moment(props.store.creation_date).year()}\n        </span>\n        <span>\n          <i className=\"box icon\"></i>\n          {props.store.items.length} Items\n        </span>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { user: state.user };\n};\n\nexport default connect(mapStateToProps, { setCurrentStore })(StoreItem);\n","import React from \"react\";\n\nconst Message = ({ tittle, message }) => {\n  return (\n    <div className=\"ui message\">\n      <div className=\"header\">{tittle}</div>\n      <p>{message}</p>\n    </div>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\n\n// semantic-ui-react\nimport { Card, Placeholder } from \"semantic-ui-react\";\n\nconst CardPlaceHolder = () => {\n  return (\n    <Card>\n      <Placeholder>\n        <Placeholder.Image />\n      </Placeholder>\n      <Card.Content>\n        <Card.Header>\n          <Placeholder>\n            <Placeholder.Header>\n              <Placeholder.Line />\n            </Placeholder.Header>\n          </Placeholder>\n        </Card.Header>\n        <Card.Description>\n          <Placeholder>\n            <Placeholder.Paragraph>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder.Paragraph>\n          </Placeholder>\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Placeholder>\n          <Placeholder.Paragraph>\n            <Placeholder.Line />\n          </Placeholder.Paragraph>\n        </Placeholder>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default CardPlaceHolder;","import React from \"react\";\n\n// components\nimport StoreItem from \"./StoreItem\";\nimport Message from \"../../../components/message\";\nimport CardPlaceHolder from \"../../../components/placeholder/CardPlaceHolder\";\n\n// semantic ui\nimport { Card } from \"semantic-ui-react\";\n\nconst renderStores = stores => {\n  return stores.map(store => {\n    return <StoreItem key={store.id} store={store} />;\n  });\n};\n\nconst StoreList = ({ stores, loading }) => {\n\n  if (loading) {\n    let amoutOfCards = [1, 2, 3];\n\n    return (\n      <Card.Group>\n        {amoutOfCards.map(id => {\n          return <CardPlaceHolder key={id} />;\n        })}\n      </Card.Group>\n    );\n  }\n\n  if (stores.length > 0) {\n    return <div className=\"ui link cards\"> {renderStores(stores)} </div>;\n  } else {\n    return (\n      <Message tittle={\"Sorry\"} message={\"We have not found any stores !\"} />\n    );\n  }\n};\n\nexport default StoreList;\n","import React, { useEffect, useState } from \"react\";\n\n// redux\nimport { connect } from \"react-redux\";\n\n// actions\nimport { fetchStores, fetchOwnStores } from \"../../../redux/store/actions\";\n\n// semantic ui react\nimport { Menu, Segment, Input, Button, Pagination } from \"semantic-ui-react\";\n\n// lodash\nimport _ from \"lodash\";\n\n// history\nimport history from \"../../../utils/history\";\n\n// Components\nimport StoreList from \"./StoreList\";\n\n// react-i18next\nimport { useTranslation } from \"react-i18next\";\n\nconst StoreMainPage = (props) => {\n  const { t } = useTranslation();\n\n  const [option, setOption] = useState(\"all\");\n  const [filter, setFilter] = useState(\"\");\n  let tabs;\n  let options;\n\n  useEffect(() => {\n    if (option === \"all\") {\n      props.fetchStores(props.store.stores.pagination);\n    } else {\n      props.fetchOwnStores(props.store.stores.pagination);\n    }\n  }, [option]);\n\n  const handleTabClick = (e, { name }) => {\n    setOption(name);\n  };\n\n  if (props.user.isLoggedIn === true) {\n    tabs = (\n      <Menu.Item name=\"own\" active={option === \"own\"} onClick={handleTabClick}>\n        {t(\"modules.store.nav.own\", \"Own\")}\n      </Menu.Item>\n    );\n    options = (\n      <Menu.Item>\n        <Button\n          onClick={() => {\n            history.push(`${props.match.path}/new`);\n          }}\n        >\n          <i className=\"plus icon\"></i>\n          {t(\"form.buttons.new\", \"New\")}\n        </Button>\n      </Menu.Item>\n    );\n  }\n\n  const returFilteredStores = () => {\n\n    if (!(filter.length > 0)) {\n      return props.store.stores.list;\n    }\n\n    return _.filter(props.store.stores.list, function (o) {\n      let str = o.name.toLowerCase();\n      var pos = str.search(filter);\n      let strDes = o.description.toLowerCase();\n      var posDes = strDes.search(filter);\n      return pos !== -1 || posDes !== -1;\n    });\n  };\n\n  const onPageChange = (e, { activePage }) => {\n    let pagination = props.store.stores.pagination;\n    pagination.page = activePage;\n    props.fetchStores(pagination);\n  };\n\n  return (\n    <>\n      <Menu attached=\"top\" tabular>\n        <Menu.Item\n          name=\"all\"\n          active={true}\n          active={option === \"all\"}\n          onClick={handleTabClick}\n        >\n          {t(\"modules.store.nav.all\", \"All\")}\n        </Menu.Item>\n        {tabs}\n\n        <Menu.Menu position=\"right\">\n          <Menu.Item className=\"big-screen-component \">\n            <Input\n              type=\"text\"\n              transparent\n              icon={{ name: \"search\", link: true }}\n              placeholder={t(\n                \"modules.store.nav.searchstores\",\n                \"Search stores...\"\n              )}\n              onChange={(e) => {\n                setFilter(e.target.value);\n              }}\n            />\n          </Menu.Item>\n\n          {options}\n        </Menu.Menu>\n      </Menu>\n\n      <Segment attached=\"bottom\">\n        <StoreList\n          stores={returFilteredStores()}\n          loading={props.store.loading}\n        />\n        <br />\n\n        {props.store.stores.pagination && (\n          <div style={{ textAlign: \"center\" }}>\n            <Pagination\n              boundaryRange={0}\n              ellipsisItem={null}\n              firstItem={null}\n              lastItem={null}\n              siblingRange={1}\n              activePage={props.store.stores.pagination.page}\n              onPageChange={onPageChange}\n              totalPages={props.store.stores.pagination.pages}\n            />\n          </div>\n        )}\n      </Segment>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { store: state.store, user: state.user };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchStores: (pagination) => dispatch(fetchStores(pagination)),\n    fetchOwnStores: (pagination) => dispatch(fetchOwnStores(pagination)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoreMainPage);\n"],"sourceRoot":""}