{"version":3,"sources":["redux/store/actions.js","App.js","redux/store/reducers.js","redux/auth/reducers.js","redux/account/reducers.js","redux/rootReducers.js","api/api.js","config/index.js","redux/store/saga.js","redux/auth/saga.js","redux/account/saga.js","redux/rootSaga.js","redux/index.js","i18n.js","index.js","utils/history.js","redux/auth/actions.js","redux/account/actions.js","redux/store/types.js","redux/auth/types.js","redux/account/types.js"],"names":["fetchStores","pagination","type","FETCH_STORES","payload","fetchStoresSuccess","stores","FETCH_STORES_SUCCESS","fetchStoresFailed","FETCH_STORES_FAILED","fetchOwnStores","FETCH_OWN","fetchOwnStoresSuccess","FETCH_OWN_SUCCESS","fetchOwnStoresFailed","FETCH_OWN_FAILED","fetchStore","storeId","FETCH_STORE","fetchStoreSuccess","store","FETCH_STORE_SUCCESS","fetchStoreFailed","FETCH_STORE_FAILED","saveStore","storeData","SAVE_STORE","saveStoreSuccess","SAVE_STORE_SUCCESS","saveStoreFailed","SAVE_STORE_FAILED","updateStore","UPDATE_STORE","updateStoreSuccess","UPDATE_STORE_SUCCESS","updateStoreFailed","UPDATE_STORE_FAILED","deleteStore","DELETE_STORE","deleteStoreSuccess","DELETE_STORE_SUCCESS","deleteStoreFailed","DELETE_STORE_FAILED","setCurrentStore","SET_CURRENT_STORE","saveItem","itemData","SAVE_ITEM","saveItemSuccess","SAVE_ITEM_SUCCESS","saveItemFailed","SAVE_ITEM_FAILED","updateItem","UPDATE_ITEM","updateItemSuccess","UPDATE_ITEM_SUCCESS","updateItemFailed","UPDATE_ITEM_FAILED","deleteItem","item","DELETE_ITEM","deleteItemSuccess","DELETE_ITEM_SUCCESS","deleteItemFailed","DELETE_ITEM_FAILED","Dashboard","React","lazy","SignUp","App","history","basename","path","exact","to","component","initialState","list","page","pages","currentStore","undefined","loading","currentItems","storeReducer","state","action","isLoggedIn","authError","authReducer","SIGN_IN","SIGN_IN_SUCCESS","SIGN_IN_FAILED","SIGN_UP","SIGN_UP_SUCCESS","SIGN_UP_FAILED","SIGN_OUT","SIGN_OUT_SUCCESS","SIGN_OUT_FAILED","SEND_PASS_EMAIL","SEND_PASS_EMAIL_SUCCESS","SEND_PASS_EMAIL_FAILED","SEND_CONFIRMATION_EMAIL","SEND_CONFIRMATION_EMAIL_SUCCESS","SEND_CONFIRMATION_EMAIL_FAILED","accounBasictInfo","accountReducer","GET_USER_INFO","GET_USER_INFO_SUCCESS","GET_USER_INFO_FAILED","CHANGE_NAME","CHANGE_NAME_SUCCESS","CHANGE_NAME_FAILED","CHANGE_EMAIL","CHANGE_EMAIL_SUCCESS","email","CHANGE_EMAIL_FAILED","CHANGE_PASSWORD","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILED","DELETE_ACCOUNT","DELETE_ACCOUNT_SUCCESS","DELETE_ACCOUNT_FAILED","combineReducers","user","account","isHandlerEnabled","config","hasOwnProperty","handlerEnabled","data","jsondata","JSON","parse","axiosInstance","axios","create","baseURL","baseUrl","interceptors","request","use","a","async","localStorage","getItem","token","access_token","headers","requestHandler","response","message","Swal","fire","text","icon","confirmButtonText","successHandler","error","status","removeItem","currentUrl","location","pathname","push","title","Promise","reject","errorHandler","fetchOwn","fetcStore","watchFetchAll","call","api","get","params","put","storeActions","post","id","delete","store_id","itemId","takeLatest","signIn","singUp","sendPassEmail","sendConfirmationEmail","signOut","watchLogin","userData","setItem","stringify","authActions","getUserInfo","changeName","changeEmail","changePassword","deleteAccount","watchAccount","console","log","accountActions","userName","username","userEmail","currentPassword","currentpassword","newPassword","newpassword","rootSaga","all","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","i18n","Backend","LanguageDetector","initReactI18next","init","fallbackLng","whitelist","interpolation","escapeValue","backend","loadPath","ReactDOM","render","fallback","document","getElementById","createBrowserHistory","process","signInSuccess","signInFailed","signOutSuccess","signUp","signUpSuccess","signUpFailed","sendPassEmailSuccess","sendPassEmailFailed","sendConfirmationEmailSuccess","sendConfirmationEmailFailed","getUserInfoSuccess","userInfo","getUserInfoFailed","newName","changeNameSucces","changeNameFailed","newEmail","changeEmailSuccess","changeEmailFailed","changePasswordSuccess","changePasswordFailed","deleteAccountSuccess","deleteAccountFailed"],"mappings":"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","file":"static/js/main.733aff3f.chunk.js","sourcesContent":["import {\n  FETCH_STORES,\n  FETCH_STORES_SUCCESS,\n  FETCH_STORES_FAILED,\n  FETCH_OWN,\n  FETCH_OWN_SUCCESS,\n  FETCH_OWN_FAILED,\n  FETCH_STORE,\n  FETCH_STORE_SUCCESS,\n  FETCH_STORE_FAILED,\n  SAVE_STORE,\n  SAVE_STORE_SUCCESS,\n  SAVE_STORE_FAILED,\n  UPDATE_STORE,\n  UPDATE_STORE_SUCCESS,\n  UPDATE_STORE_FAILED,\n  DELETE_STORE,\n  DELETE_STORE_SUCCESS,\n  DELETE_STORE_FAILED,\n  SET_CURRENT_STORE,\n  SAVE_ITEM,\n  SAVE_ITEM_SUCCESS,\n  SAVE_ITEM_FAILED,\n  UPDATE_ITEM,\n  UPDATE_ITEM_SUCCESS,\n  UPDATE_ITEM_FAILED,\n  DELETE_ITEM,\n  DELETE_ITEM_SUCCESS,\n  DELETE_ITEM_FAILED,\n} from \"./types\";\n\n//fetchStores\nexport const fetchStores = (pagination) => {\n  return { type: FETCH_STORES, payload: pagination };\n};\n\nexport const fetchStoresSuccess = (stores) => {\n  return { type: FETCH_STORES_SUCCESS, payload: stores };\n};\nexport const fetchStoresFailed = () => {\n  return { type: FETCH_STORES_FAILED };\n};\n// fetchOwnStores\nexport const fetchOwnStores = (pagination) => {\n  return { type: FETCH_OWN, payload: pagination };\n};\nexport const fetchOwnStoresSuccess = (stores) => {\n  return { type: FETCH_OWN_SUCCESS, payload: stores };\n};\nexport const fetchOwnStoresFailed = () => {\n  return { type: FETCH_OWN_FAILED };\n};\n// fetchStore\nexport const fetchStore = (storeId) => {\n  return { type: FETCH_STORE, payload: storeId };\n};\nexport const fetchStoreSuccess = (store) => {\n  return { type: FETCH_STORE_SUCCESS, payload: store };\n};\nexport const fetchStoreFailed = () => {\n  return { type: FETCH_STORE_FAILED };\n};\n// saveStore\nexport const saveStore = (storeData) => {\n  return { type: SAVE_STORE, payload: storeData };\n};\nexport const saveStoreSuccess = () => {\n  return { type: SAVE_STORE_SUCCESS };\n};\nexport const saveStoreFailed = () => {\n  return { type: SAVE_STORE_FAILED };\n};\n// updateStore\nexport const updateStore = (storeData) => {\n  return { type: UPDATE_STORE, payload: storeData };\n};\nexport const updateStoreSuccess = () => {\n  return { type: UPDATE_STORE_SUCCESS };\n};\nexport const updateStoreFailed = (storeData) => {\n  return { type: UPDATE_STORE_FAILED };\n};\n\n// deleteStore\nexport const deleteStore = (storeId) => {\n  return { type: DELETE_STORE, payload: storeId };\n};\nexport const deleteStoreSuccess = () => {\n  return { type: DELETE_STORE_SUCCESS };\n};\nexport const deleteStoreFailed = () => {\n  return { type: DELETE_STORE_FAILED };\n};\n\n// setCurrentStore\nexport const setCurrentStore = (store) => {\n  return { type: SET_CURRENT_STORE, payload: store };\n};\n\n// // // items\n// saveItem\nexport const saveItem = (itemData) => {\n  return { type: SAVE_ITEM, payload: itemData };\n};\nexport const saveItemSuccess = () => {\n  return { type: SAVE_ITEM_SUCCESS };\n};\nexport const saveItemFailed = () => {\n  return { type: SAVE_ITEM_FAILED };\n};\n\n// updateItem\nexport const updateItem = (itemData) => {\n  return { type: UPDATE_ITEM, payload: itemData };\n};\nexport const updateItemSuccess = () => {\n  return { type: UPDATE_ITEM_SUCCESS };\n};\nexport const updateItemFailed = () => {\n  return { type: UPDATE_ITEM_FAILED };\n};\n\n// deleteItem\nexport const deleteItem = (item) => {\n  return { type: DELETE_ITEM, payload: item };\n};\nexport const deleteItemSuccess = () => {\n  return { type: DELETE_ITEM_SUCCESS };\n};\nexport const deleteItemFailed = () => {\n  return { type: DELETE_ITEM_FAILED };\n};\n","import React from \"react\";\n\n// router\nimport { Redirect, Router, Switch, Route } from \"react-router-dom\";\n\n// history\nimport history from \"./utils/history\";\n\n// Components\nconst Dashboard = React.lazy(() => import(\"./views\"));\nconst SignUp = React.lazy(() => import(\"./views/user/signup\"));\n\nfunction App() {\n  return (\n    <Router history={history} basename={\"/storewebapp\"}>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/dashboard\" />\n        </Route>\n        <Route path=\"/dashboard\" component={Dashboard} />\n        <Route path=\"/signup\" component={SignUp} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import {\n  FETCH_STORES,\n  FETCH_STORES_SUCCESS,\n  FETCH_STORES_FAILED,\n  FETCH_OWN,\n  FETCH_OWN_SUCCESS,\n  FETCH_OWN_FAILED,\n  FETCH_STORE,\n  FETCH_STORE_SUCCESS,\n  FETCH_STORE_FAILED,\n  UPDATE_STORE,\n  UPDATE_STORE_SUCCESS,\n  UPDATE_STORE_FAILED,\n  DELETE_STORE,\n  DELETE_STORE_SUCCESS,\n  DELETE_STORE_FAILED,\n  SAVE_STORE,\n  SAVE_STORE_SUCCESS,\n  SAVE_STORE_FAILED,\n  SET_CURRENT_STORE,\n  SAVE_ITEM,\n  SAVE_ITEM_SUCCESS,\n  SAVE_ITEM_FAILED,\n  UPDATE_ITEM,\n  UPDATE_ITEM_SUCCESS,\n  UPDATE_ITEM_FAILED,\n  DELETE_ITEM,\n  DELETE_ITEM_SUCCESS,\n  DELETE_ITEM_FAILED,\n} from \"./types\";\n\nconst initialState = {\n  stores: {\n    list: [],\n    pagination: {\n      page: 1,\n      pages: 0,\n    },\n  },\n  currentStore: undefined,\n  loading: false,\n  currentItems: [],\n};\n\nconst storeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_STORES:\n      return { ...state, loading: true };\n    case FETCH_STORES_SUCCESS:\n      return { ...state, stores: action.payload, loading: false };\n    case FETCH_STORES_FAILED:\n      return { ...state, loading: false };\n\n    case FETCH_OWN:\n      return { ...state, loading: true };\n    case FETCH_OWN_SUCCESS:\n      return { ...state, stores: action.payload, loading: false };\n    case FETCH_OWN_FAILED:\n      return { ...state, loading: false };\n\n    case FETCH_STORE:\n      return { ...state, loading: true };\n    case FETCH_STORE_SUCCESS:\n      return { ...state, currentStore: action.payload, loading: false };\n    case FETCH_STORE_FAILED:\n      return { ...state, loading: false };\n\n    case UPDATE_STORE:\n      return { ...state, loading: true };\n    case UPDATE_STORE_SUCCESS:\n      return { ...state, loading: false };\n    case UPDATE_STORE_FAILED:\n      return { ...state, loading: false };\n\n    case DELETE_STORE:\n      return { ...state, loading: true };\n    case DELETE_STORE_SUCCESS:\n      return { ...state, loading: false };\n    case DELETE_STORE_FAILED:\n      return { ...state, loading: false };\n\n    case SAVE_STORE:\n      return { ...state, loading: true };\n    case SAVE_STORE_SUCCESS:\n      return { ...state, loading: false };\n    case SAVE_STORE_FAILED:\n      return { ...state, loading: false };\n\n    case SET_CURRENT_STORE:\n      return { ...state, currentStore: action.payload };\n\n    case SAVE_ITEM:\n      return { ...state, loading: true };\n    case SAVE_ITEM_SUCCESS:\n      return { ...state, loading: false };\n    case SAVE_ITEM_FAILED:\n      return { ...state, loading: false };\n\n    case DELETE_ITEM:\n      return { ...state, loading: true };\n    case DELETE_ITEM_SUCCESS:\n      return { ...state, loading: false };\n    case DELETE_ITEM_FAILED:\n      return { ...state, loading: false };\n\n    case UPDATE_ITEM:\n      return { ...state, loading: true };\n    case UPDATE_ITEM_SUCCESS:\n      return { ...state, loading: false };\n    case UPDATE_ITEM_FAILED:\n      return { ...state, loading: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default storeReducer;\n","import {\n  SIGN_IN,\n  SIGN_IN_SUCCESS,\n  SIGN_IN_FAILED,\n  SIGN_UP,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_FAILED,\n  SIGN_OUT,\n  SIGN_OUT_SUCCESS,\n  SIGN_OUT_FAILED,\n  SEND_PASS_EMAIL,\n  SEND_PASS_EMAIL_SUCCESS,\n  SEND_PASS_EMAIL_FAILED,\n  SEND_CONFIRMATION_EMAIL,\n  SEND_CONFIRMATION_EMAIL_SUCCESS,\n  SEND_CONFIRMATION_EMAIL_FAILED,\n} from \"./types\";\n\nconst initialState = {\n  isLoggedIn: false,\n  authError: null,\n  loading: false,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return { isLoggedIn: false, authError: null, loading: true };\n    case SIGN_IN_SUCCESS:\n      return {\n        ...action.payload,\n        isLoggedIn: true,\n        authError: null,\n        loading: false,\n      };\n    case SIGN_IN_FAILED:\n      return {\n        ...state,\n        isLoggedIn: false,\n        authError: action.payload,\n        loading: false,\n      };\n\n    case SIGN_UP:\n      return { isLoggedIn: false, authError: null, loading: true };\n    case SIGN_UP_SUCCESS:\n      return {\n        ...action.payload,\n        isLoggedIn: true,\n        authError: null,\n        loading: false,\n      };\n    case SIGN_UP_FAILED:\n      return {\n        ...state,\n        isLoggedIn: false,\n        authError: action.payload,\n        loading: false,\n      };\n\n    case SIGN_OUT:\n      return { ...state, isLoggedIn: false, authError: null, loading: true };\n    case SIGN_OUT_SUCCESS:\n      return { ...state, isLoggedIn: false, authError: null, loading: false };\n    case SIGN_OUT_FAILED:\n      return { ...state, isLoggedIn: false, authError: null, loading: false };\n\n    case SEND_PASS_EMAIL:\n      return { ...state, loading: true };\n    case SEND_PASS_EMAIL_SUCCESS:\n      return { ...state, loading: false };\n    case SEND_PASS_EMAIL_FAILED:\n      return { ...state, loading: false };\n\n    case SEND_CONFIRMATION_EMAIL:\n      return { ...state, loading: true };\n    case SEND_CONFIRMATION_EMAIL_SUCCESS:\n      return { ...state, loading: false };\n    case SEND_CONFIRMATION_EMAIL_FAILED:\n      return { ...state, loading: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import {\n  GET_USER_INFO,\n  GET_USER_INFO_SUCCESS,\n  GET_USER_INFO_FAILED,\n  CHANGE_NAME,\n  CHANGE_NAME_SUCCESS,\n  CHANGE_NAME_FAILED,\n  CHANGE_EMAIL,\n  CHANGE_EMAIL_SUCCESS,\n  CHANGE_EMAIL_FAILED,\n  CHANGE_PASSWORD,\n  CHANGE_PASSWORD_SUCCESS,\n  CHANGE_PASSWORD_FAILED,\n  DELETE_ACCOUNT,\n  DELETE_ACCOUNT_SUCCESS,\n  DELETE_ACCOUNT_FAILED,\n} from \"./types\";\n\nconst initialState = {\n  loading: false,\n  accounBasictInfo: undefined,\n};\n\nconst accountReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USER_INFO:\n      return { ...state, loading: true };\n    case GET_USER_INFO_SUCCESS:\n      return { ...state, accounBasictInfo: action.payload, loading: false };\n    case GET_USER_INFO_FAILED:\n      return { ...state, loading: false };\n\n    case CHANGE_NAME:\n      return { ...state, loading: true };\n    case CHANGE_NAME_SUCCESS:\n      return { ...state, loading: false };\n    case CHANGE_NAME_FAILED:\n      return { ...state, loading: false };\n\n    case CHANGE_EMAIL:\n      return { ...state, loading: true };\n    case CHANGE_EMAIL_SUCCESS:\n      return {\n        ...state,\n        accounBasictInfo: { ...state.accounBasictInfo, email: action.payload },\n        loading: false,\n      };\n    case CHANGE_EMAIL_FAILED:\n      return { ...state, loading: false };\n\n    case CHANGE_PASSWORD:\n      return { ...state, loading: true };\n    case CHANGE_PASSWORD_SUCCESS:\n      return { ...state, loading: false };\n    case CHANGE_PASSWORD_FAILED:\n      return { ...state, loading: false };\n\n    case DELETE_ACCOUNT:\n      return { ...state, loading: true };\n    case DELETE_ACCOUNT_SUCCESS:\n      return { ...state, loading: false };\n    case DELETE_ACCOUNT_FAILED:\n      return { ...state, loading: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default accountReducer;\n","import { combineReducers } from \"redux\";\nimport storeReducer from \"./store/reducers\";\nimport authReducer from \"./auth/reducers\";\nimport accountReducer from \"./account/reducers\";\n\nexport default combineReducers({\n  user: authReducer,\n  store: storeReducer,\n  account: accountReducer,\n});\n","// import * as moment from \"moment\";\nimport axios from \"axios\";\n\n// sweetalert2\nimport Swal from \"sweetalert2\";\n\n// history\nimport history from \"../utils/history\";\n\n// config\nimport { appConfig } from \"../config\";\n\nconst isHandlerEnabled = (config = {}) => {\n  if (config.hasOwnProperty(\"handlerEnabled\")) {\n    if (config.handlerEnabled) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  if (config.data.hasOwnProperty(\"handlerEnabled\")) {\n    if (config.data.handlerEnabled) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  let jsondata = JSON.parse(config.data);\n\n  if (jsondata.hasOwnProperty(\"handlerEnabled\")) {\n    if (jsondata.handlerEnabled) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n};\n\nconst requestHandler = async (request) => {\n  if (isHandlerEnabled(request)) {\n    // Modify request here\n    if (localStorage.getItem(\"user\")) {\n      let user = JSON.parse(localStorage.getItem(\"user\"));\n      let token = user.access_token;\n\n      request.headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n  }\n  return request;\n};\nconst errorHandler = (error) => {\n  let message;\n  message = error.response.data.message;\n\n  if (isHandlerEnabled(error.response.config)) {\n    switch (error.response.status) {\n      case 401:\n        localStorage.removeItem(\"user\");\n        let currentUrl = history.location.pathname;\n        history.push(\"/dashboard/signin?comefrom=\" + currentUrl);\n        break;\n      default:\n        message = error.response.data.message;\n        break;\n    }\n\n    if (message) {\n      Swal.fire({\n        title: \"Error!\",\n        text: message,\n        icon: \"error\",\n        confirmButtonText: \"Aceptar\",\n      });\n    }\n  }\n\n  return Promise.reject({ message });\n};\n\nconst successHandler = (response) => {\n  if (isHandlerEnabled(response.config)) {\n    if (response.data.message) {\n      Swal.fire({\n        text: response.data.message,\n        icon: \"info\",\n        confirmButtonText: \"Ok\",\n      });\n    }\n  }\n  return response;\n};\n\nconst axiosInstance = axios.create({\n  baseURL: appConfig.baseUrl,\n});\n\n// Add interceptors\naxiosInstance.interceptors.request.use((request) => requestHandler(request));\n\naxiosInstance.interceptors.response.use(\n  (response) => successHandler(response),\n  (error) => errorHandler(error)\n);\n\nexport default axiosInstance;\n","export const appConfig = {\n  baseURL: \"http://128.199.43.48/storeapp_api\",\n  // baseUrl: \"http://localhost:5000/api\",\n};\n","import api from \"../../api/api\";\n\n// effects\nimport { takeLatest, put, call } from \"redux-saga/effects\";\n\n// types\nimport {\n  FETCH_STORES,\n  FETCH_OWN,\n  FETCH_STORE,\n  SAVE_STORE,\n  UPDATE_STORE,\n  DELETE_STORE,\n  START_LOADING,\n  LOAD_ITEMS,\n  SAVE_ITEM,\n  UPDATE_ITEM,\n  DELETE_ITEM,\n  DELETE_ITEM_FINISHED,\n} from \"./types\";\n\n// actions\nimport * as storeActions from \"./actions\";\n\n// history\nimport history from \"../../utils/history\";\n\nfunction* fetchStores(action) {\n  try {\n    let pagination = action.payload;\n\n    let { data } = yield call(() => {\n      return api.get(\"/store/all\", {\n        handlerEnabled: true,\n        params: { pagination },\n      });\n    });\n\n    yield put(storeActions.fetchStoresSuccess(data.stores));\n  } catch (err) {\n    yield put(storeActions.fetchStoresFailed());\n  }\n}\n\n// Get user stores\nfunction* fetchOwn(action) {\n  try {\n    let pagination = action.payload;\n\n    let { data } = yield call(() => {\n      return api.get(\"store/ownstores\", {\n        handlerEnabled: true,\n        params: { pagination },\n      });\n    });\n    yield put(storeActions.fetchOwnStoresSuccess(data.stores));\n  } catch (err) {\n    yield put(storeActions.fetchOwnStoresFailed());\n  }\n}\n\n// Get unique store\nfunction* fetcStore(action) {\n  try {\n    let { data } = yield call(() => {\n      return api.get(`/store/${action.payload}`, { handlerEnabled: true });\n    }, action.payload);\n\n    yield put(storeActions.fetchStoreSuccess(data));\n  } catch (err) {\n    yield put(storeActions.fetchStoreFailed());\n  }\n}\n\n// Save store\nfunction* saveStore(action) {\n  try {\n    yield call(() => {\n      return api.post(`/store/creation`, {\n        handlerEnabled: true,\n        storeData: action.payload,\n      });\n    });\n    history.push(\"/dashboard/app/store\");\n\n    yield put(storeActions.saveStoreSuccess());\n  } catch (err) {\n    yield put(storeActions.saveStoreFailed());\n  }\n}\n\n// Update store\nfunction* updateStore(action) {\n  try {\n    yield call(() => {\n      return api.put(`/store/${action.payload.id}`, {\n        handlerEnabled: true,\n        storeData: action.payload,\n      });\n    });\n    history.push(\"/dashboard/app/store\");\n    yield put(storeActions.updateStoreSuccess());\n  } catch (err) {\n    yield put(storeActions.updateStoreFailed());\n  }\n}\n\n// Delete store\nfunction* deleteStore(action) {\n  try {\n    yield call(() => {\n      return api.delete(`/store/${action.payload}`, { handlerEnabled: true });\n    });\n    history.push(\"/dashboard/app/store\");\n    yield put(storeActions.deleteStoreSuccess());\n  } catch (err) {\n    yield put(storeActions.deleteStoreFailed());\n  }\n}\n\nfunction* saveItem(action) {\n  try {\n    var itemData = action.payload;\n\n    let { data } = yield call(() => {\n      return api.post(\"store/item\", { handlerEnabled: true, itemData });\n    });\n\n    yield put(storeActions.saveItemSuccess());\n    yield put(storeActions.fetchStore(itemData.store_id));\n  } catch (err) {\n    yield put(storeActions.saveItemFailed());\n  }\n}\n\nfunction* updateItem(action) {\n  try {\n    var itemData = action.payload;\n\n    let { data } = yield call(() => {\n      return api.put(`store/item/${itemData.id}`, {\n        handlerEnabled: true,\n        itemData,\n      });\n    });\n\n    yield put(storeActions.updateItemSuccess());\n    yield put(storeActions.fetchStore(itemData.store_id));\n  } catch (err) {\n    yield put(storeActions.updateItemFailed());\n  }\n}\n\nfunction* deleteItem(action) {\n  try {\n    var itemId = action.payload.id;\n\n    yield call(() => {\n      return api.delete(`store/item/${itemId}`, { handlerEnabled: true });\n    });\n    yield put(storeActions.deleteItemSuccess());\n    yield put(storeActions.fetchStore(action.payload.store_id));\n  } catch (err) {\n    yield put(storeActions.deleteItemFailed());\n  }\n}\n\nexport function* watchFetchAll() {\n  //Stores\n  yield takeLatest(FETCH_STORES, fetchStores);\n  yield takeLatest(FETCH_OWN, fetchOwn);\n  yield takeLatest(FETCH_STORE, fetcStore);\n  yield takeLatest(SAVE_STORE, saveStore);\n  yield takeLatest(UPDATE_STORE, updateStore);\n  yield takeLatest(DELETE_STORE, deleteStore);\n\n  //Items\n  yield takeLatest(SAVE_ITEM, saveItem);\n  yield takeLatest(UPDATE_ITEM, updateItem);\n  yield takeLatest(DELETE_ITEM, deleteItem);\n}\n","import api from \"../../api/api\";\n\n// effects\nimport { takeLatest, put, call } from \"redux-saga/effects\";\n\n// types\nimport {\n  SIGN_IN,\n  SIGN_UP,\n  SIGN_OUT,\n  SEND_PASS_EMAIL,\n  SEND_CONFIRMATION_EMAIL,\n} from \"./types\";\n\n// actions\nimport * as authActions from \"./actions\";\n\n// history\nimport history from \"../../utils/history\";\n\nfunction* signIn(action) {\n  try {\n    let { data } = yield call(() => {\n      return api.post(\"/user/signin\", {\n        handlerEnabled: false,\n        userData: action.payload.userData,\n      });\n    });\n\n    localStorage.setItem(\"user\", JSON.stringify(data));\n\n    history.push(\"/\");\n\n    yield put(authActions.signInSuccess(data));\n  } catch (err) {\n    yield put(authActions.signInFailed(err.message));\n  }\n}\n\nfunction* singUp(action) {\n  try {\n    let { data } = yield call(() => {\n      return api.post(\"/user/signup\", {\n        handlerEnabled: true,\n        userData: action.payload,\n      });\n    });\n\n    localStorage.setItem(\"user\", JSON.stringify(data.user));\n\n    history.push(\"/\");\n\n    yield put(authActions.signUpSuccess(data.user));\n  } catch (err) {\n    yield put(authActions.signUpFailed());\n  }\n}\n\nfunction* sendPassEmail(action) {\n  try {\n    yield call(() => {\n      return api.post(\"/user/resetpassword\", {\n        handlerEnabled: true,\n        userData: { email: action.payload },\n      });\n    });\n\n    history.push(\"/dashboard/user/signin\");\n    yield put(authActions.sendPassEmailSuccess());\n  } catch {\n    yield put(authActions.sendPassEmailFailed());\n  }\n}\n\nfunction* sendConfirmationEmail(action) {\n  try {\n    yield call(() => {\n      return api.post(\"/user/confirmationemail\", {\n        handlerEnabled: true,\n        userData: action.payload.userData,\n      });\n    });\n    yield put(authActions.sendConfirmationEmailSuccess());\n\n    history.push(\"/dashboard/user/signin\");\n  } catch {\n    yield put(authActions.sendConfirmationEmailFailed());\n  }\n}\n\nfunction* signOut() {\n  yield put(authActions.signOutSuccess());\n\n  if (localStorage.getItem(\"user\")) {\n    localStorage.removeItem(\"user\");\n  }\n  history.push(\"/dashboard/app/home\");\n  yield put(authActions.signOutSuccess());\n}\n\nexport function* watchLogin() {\n  yield takeLatest(SIGN_IN, signIn);\n  yield takeLatest(SIGN_UP, singUp);\n  yield takeLatest(SEND_PASS_EMAIL, sendPassEmail);\n  yield takeLatest(SEND_CONFIRMATION_EMAIL, sendConfirmationEmail);\n  yield takeLatest(SIGN_OUT, signOut);\n}\n","import { takeLatest, call, put } from \"redux-saga/effects\";\n\n// api\nimport api from \"../../api/api\";\n\n// history\nimport history from \"../../utils/history\";\n\nimport {\n  GET_USER_INFO,\n  CHANGE_NAME,\n  CHANGE_EMAIL,\n  CHANGE_PASSWORD,\n  DELETE_ACCOUNT,\n} from \"./types\";\n\n// actions\nimport * as accountActions from \"./actions\";\nimport * as authActions from \"../auth/actions\";\n\nfunction* getUserInfo() {\n  try {\n\n    console.log(\"getUserInfo\")\n    let { data } = yield call(() => {\n      return api.get(\"user/user\", { handlerEnabled: true });\n    });\n\n    console.log(\"getUserInfo\", data)\n\n\n    yield put(accountActions.getUserInfoSuccess(data));\n  } catch {\n    yield put(accountActions.getUserInfoFailed());\n  }\n}\n\nfunction* changeName(action) {\n  try {\n    yield call(() => {\n      return api.put(\"user/username\", {\n        handlerEnabled: true,\n        userName: action.payload,\n      });\n    });\n\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    user.username = action.payload;\n\n    localStorage.setItem(\"user\", JSON.stringify(user));\n\n    yield put(authActions.signInSuccess(user));\n    yield put(accountActions.changeNameSucces());\n  } catch {\n    yield put(accountActions.changeNameFailed());\n  }\n}\n\nfunction* changeEmail(action) {\n  try {\n    yield call(() => {\n      return api.put(\"user/email\", {\n        handlerEnabled: true,\n        userEmail: action.payload,\n      });\n    });\n\n    yield put(accountActions.changeEmailSuccess(action.payload));\n  } catch {\n    yield put(accountActions.changeEmailFailed());\n  }\n}\n\nfunction* changePassword(action) {\n  try {\n    yield call(() => {\n      return api.put(\"user/password\", {\n        handlerEnabled: true,\n        currentPassword: action.payload.currentpassword,\n        newPassword: action.payload.newpassword,\n      });\n    });\n    history.push(\"/dashboard/app/account/basicinfo\");\n    yield put(accountActions.changePasswordSuccess());\n  } catch {\n    yield put(accountActions.changePasswordFailed());\n  }\n}\n\nfunction* deleteAccount() {\n  try {\n    yield call(() => {\n      return api.delete(\"user/user\", { handlerEnabled: true });\n    });\n\n    yield put(accountActions.deleteAccountSuccess());\n    yield put(authActions.signOut());\n  } catch {\n    yield put(accountActions.deleteAccountFailed());\n  }\n}\n\nexport function* watchAccount() {\n  yield takeLatest(GET_USER_INFO, getUserInfo);\n  yield takeLatest(CHANGE_NAME, changeName);\n  yield takeLatest(CHANGE_EMAIL, changeEmail);\n  yield takeLatest(CHANGE_PASSWORD, changePassword);\n  yield takeLatest(DELETE_ACCOUNT, deleteAccount);\n}\n","import { all } from \"redux-saga/effects\";\nimport { watchFetchAll } from \"./store/saga\";\nimport { watchLogin } from \"./auth/saga\";\nimport { watchAccount } from \"./account/saga\";\n\nexport function* rootSaga() {\n  yield all([watchFetchAll(), watchLogin(), watchAccount()]);\n}\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducers from \"./rootReducers\";\nimport { rootSaga } from \"./rootSaga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,  composeEnhancers(\n    applyMiddleware(sagaMiddleware)\n  ));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-xhr-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nlocalStorage.removeItem(\"i18nextLng\");\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    // debug: true,\n    // lng: \"en\",\n    fallbackLng: \"en\",\n    whitelist: [\"en\", \"es\"],\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    backend: {\n      loadPath: \"locales/{{lng}}/{{ns}}.json\",\n    },\n  });\nexport default i18n;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// components\nimport App from \"./App\";\n\n// css\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./AppStyle.css\";\nimport \"react-image-crop/dist/ReactCrop.css\";\n\n// redux\nimport { Provider } from \"react-redux\";\nimport store from \"./redux\";\n\n// i18n\nimport \"./i18n\";\n\nReactDOM.render(\n  <Suspense fallback={<div>Loading...</div>}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Suspense>,\n  document.getElementById(\"root\")\n);\n\n\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory({\n  basename: process.env.PUBLIC_URL,\n});\n","import {\n  SIGN_IN,\n  SIGN_IN_SUCCESS,\n  SIGN_IN_FAILED,\n  SIGN_OUT,\n  SIGN_OUT_SUCCESS,\n  SIGN_OUT_FAILED,\n  SIGN_UP,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_FAILED,\n  SEND_PASS_EMAIL,\n  SEND_PASS_EMAIL_SUCCESS,\n  SEND_CONFIRMATION_EMAIL,\n  SEND_CONFIRMATION_EMAIL_SUCCESS,\n  SEND_CONFIRMATION_EMAIL_FAILED,\n  SEND_PASS_EMAIL_FAILED,\n} from \"./types\";\n\n// signIn\nexport const signIn = (userData) => {\n  return { type: SIGN_IN, payload: userData };\n};\nexport const signInSuccess = (userData) => {\n  return { type: SIGN_IN_SUCCESS, payload: userData };\n};\nexport const signInFailed = (message) => {\n  return { type: SIGN_IN_FAILED, payload: message };\n};\n\n// signOut\nexport const signOut = () => {\n  return { type: SIGN_OUT };\n};\nexport const signOutSuccess = () => {\n  return { type: SIGN_OUT_SUCCESS };\n};\nexport const signOutFailed = () => {\n  return { type: SIGN_OUT_FAILED };\n};\n\n// signUp\nexport const signUp = (userData) => {\n  return { type: SIGN_UP, payload: userData };\n};\nexport const signUpSuccess = (userData) => {\n  return { type: SIGN_UP_SUCCESS, payload: userData };\n};\nexport const signUpFailed = (message) => {\n  return { type: SIGN_UP_FAILED, payload: message };\n};\n\n// sendPassEmail\nexport const sendPassEmail = (username) => {\n  return { type: SEND_PASS_EMAIL, payload: username };\n};\nexport const sendPassEmailSuccess = () => {\n  return { type: SEND_PASS_EMAIL_SUCCESS };\n};\nexport const sendPassEmailFailed = () => {\n  return { type: SEND_PASS_EMAIL_FAILED };\n};\n\n// sendConfirmationEmail\nexport const sendConfirmationEmail = (userData) => {\n  return { type: SEND_CONFIRMATION_EMAIL, payload: userData };\n};\nexport const sendConfirmationEmailSuccess = () => {\n  return { type: SEND_CONFIRMATION_EMAIL_SUCCESS };\n};\nexport const sendConfirmationEmailFailed = () => {\n  return { type: SEND_CONFIRMATION_EMAIL_FAILED };\n};\n","import {\n  GET_USER_INFO,\n  GET_USER_INFO_SUCCESS,\n  GET_USER_INFO_FAILED,\n  CHANGE_NAME,\n  CHANGE_NAME_SUCCESS,\n  CHANGE_NAME_FAILED,\n  CHANGE_EMAIL,\n  CHANGE_EMAIL_SUCCESS,\n  CHANGE_EMAIL_FAILED,\n  CHANGE_PASSWORD,\n  CHANGE_PASSWORD_SUCCESS,\n  CHANGE_PASSWORD_FAILED,\n  DELETE_ACCOUNT,\n  DELETE_ACCOUNT_SUCCESS,\n  DELETE_ACCOUNT_FAILED,\n} from \"./types\";\n\n// getUserInfo\nexport const getUserInfo = () => {\n  return { type: GET_USER_INFO };\n};\nexport const getUserInfoSuccess = (userInfo) => {\n  return { type: GET_USER_INFO_SUCCESS, payload: userInfo };\n};\nexport const getUserInfoFailed = () => {\n  return { type: GET_USER_INFO_FAILED };\n};\n\n// changeName\nexport const changeName = (newName) => {\n  return { type: CHANGE_NAME, payload: newName };\n};\nexport const changeNameSucces = (newName) => {\n  return { type: CHANGE_NAME_SUCCESS, payload: newName };\n};\nexport const changeNameFailed = () => {\n  return { type: CHANGE_NAME_FAILED };\n};\n\n// changeEmail\nexport const changeEmail = (newEmail) => {\n  return { type: CHANGE_EMAIL, payload: newEmail };\n};\nexport const changeEmailSuccess = (newEmail) => {\n  return { type: CHANGE_EMAIL_SUCCESS, payload: newEmail };\n};\nexport const changeEmailFailed = () => {\n  return { type: CHANGE_EMAIL_FAILED };\n};\n\n// changePassword\nexport const changePassword = (newPassword) => {\n  return { type: CHANGE_PASSWORD, payload: newPassword };\n};\nexport const changePasswordSuccess = () => {\n  return { type: CHANGE_PASSWORD_SUCCESS };\n};\nexport const changePasswordFailed = () => {\n  return { type: CHANGE_PASSWORD_FAILED };\n};\n\n// deleteAccount\nexport const deleteAccount = () => {\n  return { type: DELETE_ACCOUNT };\n};\nexport const deleteAccountSuccess = () => {\n  return { type: DELETE_ACCOUNT_SUCCESS };\n};\nexport const deleteAccountFailed = () => {\n  return { type: DELETE_ACCOUNT_FAILED };\n};\n","//STORES\nexport const FETCH_STORES = \"[STORE] FETCH_STORES\";\nexport const FETCH_STORES_SUCCESS = \"[STORE] FETCH_STORES_SUCCESS\";\nexport const FETCH_STORES_FAILED = \"[STORE] FETCH_STORES_FAILED\";\n\nexport const FETCH_OWN = \"[STORE] FETCH_OWN\";\nexport const FETCH_OWN_SUCCESS = \"[STORE] FETCH_OWN_SUCCESS\";\nexport const FETCH_OWN_FAILED = \"[STORE] FETCH_OWN_FAILED\";\n\nexport const FETCH_STORE = \"[STORE] FETCH_STORE\";\nexport const FETCH_STORE_SUCCESS = \"[STORE] FETCH_STORE_SUCCESS\";\nexport const FETCH_STORE_FAILED = \"[STORE] FETCH_STORE_FAILED\";\n\nexport const UPDATE_STORE = \"[STORE] UPDATE_STORE\";\nexport const UPDATE_STORE_SUCCESS = \"[STORE] UPDATE_STORE_SUCCESS\";\nexport const UPDATE_STORE_FAILED = \"[STORE] UPDATE_STORE_FAILED\";\n\nexport const SAVE_STORE = \"[STORE] SAVE_STORE\";\nexport const SAVE_STORE_SUCCESS = \"[STORE] SAVE_STORE_SUCCESS\";\nexport const SAVE_STORE_FAILED = \"[STORE] SAVE_STORE_FAILED\";\n\nexport const DELETE_STORE = \"[STORE] DELETE_STORE\";\nexport const DELETE_STORE_SUCCESS = \"[STORE] DELETE_STORE_SUCCESS\";\nexport const DELETE_STORE_FAILED = \"[STORE] DELETE_STORE_FAILED\";\n\nexport const SET_CURRENT_STORE = \"[STORE] SET_CURRENT_STORE\";\n\n//Items\nexport const SAVE_ITEM = \"[STORE] SAVE_ITEM\";\nexport const SAVE_ITEM_SUCCESS = \"[STORE] SAVE_ITEM_SUCCESS\";\nexport const SAVE_ITEM_FAILED = \"[STORE] SAVE_ITEM_FAILED\";\n\nexport const UPDATE_ITEM = \"[STORE] UPDATE_ITEM\";\nexport const UPDATE_ITEM_SUCCESS = \"[STORE] UPDATE_ITEM_SUCCESS\";\nexport const UPDATE_ITEM_FAILED = \"[STORE] UPDATE_ITEM_FAILED\";\n\nexport const DELETE_ITEM = \"[STORE] DELETE_ITEM\";\nexport const DELETE_ITEM_SUCCESS = \"[STORE] DELETE_ITEM_SUCCESS\";\nexport const DELETE_ITEM_FAILED = \"[STORE] DELETE_ITEM_FAILED\";\n","// SIGN_IN\nexport const SIGN_IN = '[AUTH] SIGN_IN';\nexport const SIGN_IN_SUCCESS = '[AUTH] SIGN_IN_SUCCESS';\nexport const SIGN_IN_FAILED = '[AUTH] SIGN_IN_FAILED';\n\n// SIGN_OUT\nexport const SIGN_OUT = '[AUTH] SIGN_OUT';\nexport const SIGN_OUT_SUCCESS = '[AUTH] SIGN_OUT_SUCCESS';\nexport const SIGN_OUT_FAILED = '[AUTH] SIGN_OUT_FAILED';\n\n// SIGN_UP\nexport const SIGN_UP = '[AUTH] SIGN_UP';\nexport const SIGN_UP_SUCCESS = '[AUTH] SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILED = '[AUTH] SIGN_UP_FAILED';\n\n// SEND_PASS_EMAIL\nexport const SEND_PASS_EMAIL = '[AUTH] SEND_PASS_EMAIL';\nexport const SEND_PASS_EMAIL_SUCCESS = '[AUTH] SEND_PASS_EMAIL_SUCCESS';\nexport const SEND_PASS_EMAIL_FAILED = '[AUTH] SEND_PASS_EMAIL_FAILED';\n\n// SEND_CONFIRMATION_EMAIL\nexport const SEND_CONFIRMATION_EMAIL = '[AUTH] SEND_CONFIRMATION_EMAIL';\nexport const SEND_CONFIRMATION_EMAIL_SUCCESS = '[AUTH] SEND_CONFIRMATION_EMAIL_SUCCESS';\nexport const SEND_CONFIRMATION_EMAIL_FAILED = '[AUTH] SEND_CONFIRMATION_EMAIL_FAILED';\n\n","// GET_USER_INFO\nexport const GET_USER_INFO = \"[ACCOUNT] GET_USER_INFO\";\nexport const GET_USER_INFO_SUCCESS = \"[ACCOUNT] GET_USER_INFO_SUCCESS\";\nexport const GET_USER_INFO_FAILED = \"[ACCOUNT] GET_USER_INFO_FAILED\";\n\n// CHANGE_NAME\nexport const CHANGE_NAME = \"[ACCOUNT] CHANGE_NAME\";\nexport const CHANGE_NAME_SUCCESS = \"[ACCOUNT] CHANGE_NAME_SUCCESS\";\nexport const CHANGE_NAME_FAILED = \"[ACCOUNT] CHANGE_NAME_FAILED\";\n\n// CHANGE_EMAIL\nexport const CHANGE_EMAIL = \"[ACCOUNT] CHANGE_EMAIL\";\nexport const CHANGE_EMAIL_SUCCESS = \"[ACCOUNT] CHANGE_EMAIL_SUCCESS\";\nexport const CHANGE_EMAIL_FAILED = \"[ACCOUNT] CHANGE_EMAIL_FAILED\";\n\n// CHANGE_PASSWORD\nexport const CHANGE_PASSWORD = \"[ACCOUNT] CHANGE_PASSWORD\";\nexport const CHANGE_PASSWORD_SUCCESS = \"[ACCOUNT] CHANGE_PASSWORD_SUCCESS\";\nexport const CHANGE_PASSWORD_FAILED = \"[ACCOUNT] CHANGE_PASSWORD_FAILED\";\n\n// DELETE_ACCOUNT\nexport const DELETE_ACCOUNT = \"[ACCOUNT] DELETE_ACCOUNT\";\nexport const DELETE_ACCOUNT_SUCCESS = \"[ACCOUNT] DELETE_ACCOUNT_SUCCESS\";\nexport const DELETE_ACCOUNT_FAILED = \"[ACCOUNT] DELETE_ACCOUNT_FAILED\";\n\n"],"sourceRoot":""}