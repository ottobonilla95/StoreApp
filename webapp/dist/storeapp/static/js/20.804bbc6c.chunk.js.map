{"version":3,"sources":["views/app/account/BasicInfo.js"],"names":["BasicInfo","props","t","useTranslation","useState","value","account","accounBasictInfo","username","error","undefined","userName","setUserName","email","userEmail","setUserEmail","onSubmit","ChangeName","Input","placeholder","onChange","event","val","target","length","disabled","loading","content","pointing","className","type","ChangeEmail","test"],"mappings":"gKA6HeA,UArHG,SAACC,GAAW,IACpBC,EAAMC,cAAND,EADmB,EAEKE,mBAAS,CACvCC,MAAOJ,EAAMK,QAAQC,iBAAiBC,SACtCC,WAAOC,IAJkB,mBAEpBC,EAFoB,KAEVC,EAFU,OAMOR,mBAAS,CACzCC,MAAOJ,EAAMK,QAAQC,iBAAiBM,MACtCJ,WAAOC,IARkB,mBAMpBI,EANoB,KAMTC,EANS,KA+C3B,OACE,oCACE,4BAAKb,EAAE,oCAAqC,eAC5C,kBAAC,IAAD,MACA,2BACE,2BAAIA,EAAE,6CAA8C,QAApD,MAEF,kBAAC,IAAD,CAAMc,SAlBiB,WACrBf,EAAMK,QAAQC,iBAAiBC,WAAaG,EAASN,OACvDJ,EAAMgB,WAAWN,EAASN,SAiBxB,kBAAC,IAAKa,MAAN,CACEC,YAAY,WACZd,MAAOM,EAASN,MAChBe,SA/CiB,SAACC,GACxB,IAAIC,EAAMD,EAAME,OAAOlB,MAEnBiB,EAAIE,OAAS,EACfZ,EAAY,CAAEP,MAAOiB,EAAKb,MAAO,oBAEjCG,EAAY,CAAEP,MAAOiB,KA0CjBG,SAAUxB,EAAMK,QAAQoB,QACxBjB,MACEE,EAASF,OAAS,CAChBkB,QAAShB,EAASF,MAClBmB,SAAU,WAIhB,4BACEC,UAAS,6BACP5B,EAAMK,QAAQoB,QAAU,UAAY,IAEtCI,KAAK,SACLL,SACExB,EAAMK,QAAQoB,SACdf,EAASF,OACTR,EAAMK,QAAQC,iBAAiBC,WAAaG,EAASN,OAGtDH,EAAE,oBAAqB,UAG5B,6BAEA,2BACE,2BAAIA,EAAE,8CAA+C,SAArD,MAEF,kBAAC,IAAD,CAAMc,SA5CkB,WACtBf,EAAMK,QAAQC,iBAAiBM,QAAUC,EAAUT,OACrDJ,EAAM8B,YAAYjB,EAAUT,SA2C1B,kBAAC,IAAKa,MAAN,CACEC,YAAY,WACZd,MAAOS,EAAUT,MACjBe,SArEkB,SAACC,GACzB,IAAIC,EAAMD,EAAME,OAAOlB,MAEZ,4CAED2B,KAAKV,GAMbP,EAAa,CAAEV,MAAOiB,IALtBP,EAAa,CACXV,MAAOiB,EACPb,MAAOP,EAAE,uCAAwC,oBA8D/CuB,SAAUxB,EAAMK,QAAQoB,QACxBjB,MACEK,EAAUL,OAAS,CACjBkB,QAASb,EAAUL,MACnBmB,SAAU,WAIhB,4BACEC,UAAS,6BACP5B,EAAMK,QAAQoB,QAAU,UAAY,IAEtCI,KAAK,SACLL,SACExB,EAAMK,QAAQoB,SACdZ,EAAUL,OACVR,EAAMK,QAAQC,iBAAiBM,QAAUC,EAAUT,OAGpDH,EAAE,oBAAqB","file":"static/js/20.804bbc6c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\n// semantic-ui-react\nimport { Divider, Form } from \"semantic-ui-react\";\n\n// react-i18next\nimport { useTranslation } from \"react-i18next\";\n\nconst BasicInfo = (props) => {\n  const { t } = useTranslation();\n  const [userName, setUserName] = useState({\n    value: props.account.accounBasictInfo.username,\n    error: undefined\n  });\n  const [userEmail, setUserEmail] = useState({\n    value: props.account.accounBasictInfo.email,\n    error: undefined\n  });\n\n  const handleNameChange = (event) => {\n    let val = event.target.value;\n\n    if (val.length < 4) {\n      setUserName({ value: val, error: \"Min length is 4\" });\n    } else {\n      setUserName({ value: val });\n    }\n  };\n\n  const handleEmailChange = (event) => {\n    let val = event.target.value;\n\n    var patt = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n\n    if (!patt.test(val)) {\n      setUserEmail({\n        value: val,\n        error: t(\"form.validationmessages.invalidemail\", \"Invalid Email\"),\n      });\n    } else {\n      setUserEmail({ value: val });\n    }\n  };\n\n  const onSubmitChangeName = () => {\n    if (props.account.accounBasictInfo.username !== userName.value) {\n      props.ChangeName(userName.value);\n    }\n  };\n\n  const onSubmitChangeEmail = () => {\n    if (props.account.accounBasictInfo.email !== userEmail.value) {\n      props.ChangeEmail(userEmail.value);\n    }\n  };\n  return (\n    <>\n      <h3>{t(\"modules.account.basic-info.tittle\", \"Basic Info\")}</h3>\n      <Divider />\n      <p>\n        <b>{t(\"modules.account.basic-info.form.label.name\", \"Name\")}:</b>\n      </p>\n      <Form onSubmit={onSubmitChangeName}>\n        <Form.Input\n          placeholder=\"Username\"\n          value={userName.value}\n          onChange={handleNameChange}\n          disabled={props.account.loading}\n          error={\n            userName.error && {\n              content: userName.error,\n              pointing: \"below\",\n            }\n          }\n        />\n        <button\n          className={`ui button positive ${\n            props.account.loading ? \"loading\" : \"\"\n          }`}\n          type=\"submit\"\n          disabled={\n            props.account.loading ||\n            userName.error ||\n            props.account.accounBasictInfo.username === userName.value\n          }\n        >\n          {t(\"form.buttons.save\", \"Save\")}\n        </button>\n      </Form>\n      <br />\n\n      <p>\n        <b>{t(\"modules.account.basic-info.form.label.email\", \"Email\")}:</b>\n      </p>\n      <Form onSubmit={onSubmitChangeEmail}>\n        <Form.Input\n          placeholder=\"Email...\"\n          value={userEmail.value}\n          onChange={handleEmailChange}\n          disabled={props.account.loading}\n          error={\n            userEmail.error && {\n              content: userEmail.error,\n              pointing: \"below\",\n            }\n          }\n        />\n        <button\n          className={`ui button positive ${\n            props.account.loading ? \"loading\" : \"\"\n          }`}\n          type=\"submit\"\n          disabled={\n            props.account.loading ||\n            userEmail.error ||\n            props.account.accounBasictInfo.email === userEmail.value\n          }\n        >\n          {t(\"form.buttons.save\", \"Save\")}\n        </button>\n      </Form>\n    </>\n  );\n};\n\nexport default BasicInfo;\n"],"sourceRoot":""}