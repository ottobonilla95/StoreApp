{"version":3,"sources":["views/user/RestorePassword/index.js"],"names":["connect","state","user","dispatch","sendPassEmail","email","props","t","useTranslation","useForm","control","errors","handleSubmit","className","onSubmit","data","as","Field","Input","label","placeholder","disabled","loading","error","content","message","pointing","name","rules","required","defaultValue","type","onClick","history","push"],"mappings":"mGAAA,sFAoGeA,uBAZS,SAACC,GACvB,MAAO,CACLC,KAAMD,EAAMC,SAIW,SAACC,GAC1B,MAAO,CACLC,cAAe,SAACC,GAAD,OAAWF,EAASC,YAAcC,QAItCL,EAhFS,SAACM,GAAW,IAC1BC,EAAMC,cAAND,EADyB,EAISE,cAAlCC,EAJyB,EAIzBA,QAASC,EAJgB,EAIhBA,OAAQC,EAJQ,EAIRA,aAMzB,OACE,yBAAKC,UAAU,kBACb,4BAAKN,EAAE,iCAAkC,qBACzC,yBAAKM,UAAU,eACf,kBAAC,IAAD,CAAMC,SAAUF,GARH,SAACG,GAChBT,EAAMF,cAAcW,EAAKV,WAQrB,kBAAC,IAAD,CACEW,GACE,kBAAC,IAAKC,MAAN,CACEP,QAASQ,IACTC,MAAOZ,EAAE,2CAA4C,SACrDa,YAAab,EACX,2CACA,SAEFc,SAAUf,EAAMJ,KAAKoB,QACrBC,MACEZ,EAAON,OAAS,CACdmB,QAASb,EAAON,MAAMoB,QACtBC,SAAU,WAKlBC,KAAK,QACLjB,QAASA,EACTkB,MAAO,CACLC,SAAUtB,EACR,wCACA,2BAGJuB,aAAa,KAGf,4BACEjB,UAAS,6BACPP,EAAMJ,KAAKoB,QAAU,UAAY,IAEnCS,KAAK,SACLV,SAAUf,EAAMJ,KAAKoB,SAEpBf,EAAE,iDAAkD,aAEvD,4BACEwB,KAAK,SACLlB,UAAU,YACVmB,QAAS,WACPC,IAAQC,KAAK,2BAEfb,SAAUf,EAAMJ,KAAKoB,SAEpBf,EAAE,oBAAqB","file":"static/js/26.ad406a24.chunk.js","sourcesContent":["import React from \"react\";\n\n// semantic-ui-react\"\nimport { Form, Input } from \"semantic-ui-react\";\n\n// react-hook-form\nimport { useForm, Controller } from \"react-hook-form\";\n\n// react-i18next\nimport { useTranslation } from \"react-i18next\";\n\n// history\nimport history from \"../../../utils/history\";\n\n// redux\nimport { connect } from \"react-redux\";\n\n// actions\nimport { sendPassEmail } from \"../../../redux/auth/actions\";\n\nconst RestorePassword = (props) => {\n  const { t } = useTranslation();\n\n  // form\n  const { control, errors, handleSubmit } = useForm();\n\n  const onSubmit = (data) => {\n    props.sendPassEmail(data.email);\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h2>{t(\"modules.restorepassword.tittle\", \"Restore Password\")}</h2>\n      <div className=\"ui divider\"></div>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Controller\n          as={\n            <Form.Field\n              control={Input}\n              label={t(\"modules.restorepassword.form.label.email\", \"Email\")}\n              placeholder={t(\n                \"modules.restorepassword.form.label.email\",\n                \"Email\"\n              )}\n              disabled={props.user.loading}\n              error={\n                errors.email && {\n                  content: errors.email.message,\n                  pointing: \"below\",\n                }\n              }\n            />\n          }\n          name=\"email\"\n          control={control}\n          rules={{\n            required: t(\n              \"form.validationmessages.requiredfield\",\n              \"This field is required\"\n            ),\n          }}\n          defaultValue=\"\"\n        />\n\n        <button\n          className={`ui button positive ${\n            props.user.loading ? \"loading\" : \"\"\n          }`}\n          type=\"submit\"\n          disabled={props.user.loading}\n        >\n          {t(\"modules.restorepassword.form.buttons.findemail\", \"Sdign Up\")}\n        </button>\n        <button\n          type=\"button\"\n          className=\"ui button\"\n          onClick={() => {\n            history.push(\"/dashboard/user/signin\");\n          }}\n          disabled={props.user.loading}\n        >\n          {t(\"form.buttons.back\", \"Back\")}\n        </button>\n      </Form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendPassEmail: (email) => dispatch(sendPassEmail(email)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RestorePassword);\n"],"sourceRoot":""}